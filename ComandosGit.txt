GIT

echo cd Aplicativos/Proyectos/ >> ~/.bashrc
logout
para cambiar el directorio.

git init (inicia monitoreo de la carpeta cambia a master en la linea de comando)

git status : nos da el estado que carpetas no han sido agregadas.

git add .  o git add -A
agrega todo lo que esta en la carpeta.
git add carpeta/
agrega todo lo de la carpeta.
git add archivo.txt
agrega el archivo 

si se borra algo no se actualizara se debe usar el comando rm
 deleted: app/assets/images/rails.png
rm 'app/assets/images/rails.png'
$ git status

git commit -m "Actualización cambio en archivo comando"

git log
muestra los cambios por cada commit.

git checkout "codigo del log" lleva al respaldo indicado
git checkout master lleva al ultimo commit realizado dentro de todas las ramas

se agrego reset esto es para el log. dejar una version
git reset --soft codigo-Log (no toca el codigo solo elimina el log)

Ramas:
ahora se creo el branch para generar diferentes lineas de tiempo, 
ejemplo desarrollo, test, QA, produccion.
git branch "test"

fusionar ramas: ademas esta el merge
para esto debes ir a la rama donde queremos agregar los cambios
git merge test (la rama que queremos taer)

eliminar ramas:
git branch -D rama (para eliminar)

crear una rama y cambiarse a la vez:
git checkout -b Produccion.

***********
github:
git remote add https://github.com/Manuel172/PruebaInicial.git
git remote -v (ve estado conectado al proyecto)
git remote remove origin (eliminar proyecto de github)
git push origin master  (sube los codigos)
pide usuario y clave de github
ver los issues -> milestone y label para tiempo y etiqueta.
*******************************************
cambio en los commit

git commit --amend -m "se cambia la ultimo tag del commit"
forzar subida a github despues de la modificacion con 
git push origin master -f
********* tag anotadas.
git tag -a v1.0 -m "mensaje tag anotadas"
estas son almacenadas como objeto.
********** tag ligeras
git tag v.1.0
**********tag especificos a un comiit o codigo SHA.
git tag -a v1.0 -m 'mensaje' codigo-sha
***subir todos los tag
git push origin --tags
****************
traspasar a otros usuarios

ver los issues -> milestone y label para tiempo y etiqueta.
*******************************************
cambio en los commit

git commit --amend -m "se cambia la ultimo tag del commit"
forzar subida a github despues de la modificacion con 
git push origin master -f
********* tag anotadas.
git tag -a v1.0 -m "mensaje tag anotadas"
estas son almacenadas como objeto.
********** tag ligeras
git tag v.1.0
**********tag especificos a un comiit o codigo SHA.
git tag -a v1.0 -m 'mensaje' codigo-sha
***subir todos los tag
git push origin --tags

****************ramas ocultas
git branch -a
*************** bajar cambios al equipo local
git fetch origin 
(subir cambios con git push origin master despues del commit)
******************************
git merge origin/master







